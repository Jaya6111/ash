spring.application.name=book

server.port=8081

spring.data.mongodb.host=localhost
spring.data.mongodb.database=demo
spring.data.mongodb.port=27017

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

## CircuitBreaker Configuration
resilience4j.circuitbreaker.instances.myCircuitBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.myCircuitBreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.myCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.myCircuitBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.myCircuitBreaker.wait-duration-in-open-state.seconds=5
resilience4j.circuitbreaker.instances.myCircuitBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.myCircuitBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.myCircuitBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.myCircuitBreaker.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.myCircuitBreaker.record-exceptions=java.net.ConnectException, java.io.IOException, org.springframework.web.client.HttpServerErrorException


## Retry mechanism Configuration
resilience4j.retry.instances.myCircuitBreaker.max-attempts=5
resilience4j.retry.instances.myCircuitBreaker.wait-duration=5s
#resilience4j.retry.instances.myCircuitBreaker.max-retry-attempts=5

## RateLimiter Configuration
resilience4j.ratelimiter.instances.myCircuitBreaker.register-health-indicator=false
resilience4j.ratelimiter.instances.myCircuitBreaker.limit-for-period=10
resilience4j.ratelimiter.instances.myCircuitBreaker.limit-refresh-period.seconds=10
resilience4j.ratelimiter.instances.myCircuitBreaker.timeout-duration.seconds=3