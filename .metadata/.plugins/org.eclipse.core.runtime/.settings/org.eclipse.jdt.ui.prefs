content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.jdt.ui.javaPostfixProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.javaChainProposalCategory\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.String"/><rhs name\="java.lang.StringBuffer"/><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="org.springframework.core.io.InputStreamSource"><rhs name\="org.springframework.mock.web.MockMultipartFile"/></lhs><lhs name\="org.springframework.web.multipart.MultipartFile"><rhs name\="org.springframework.mock.web.MockMultipartFile"/></lhs><lhs name\="com.rs.core.examples.DuplicateWords$RemoveDuplicateOccurrence"><rhs name\="com.rs.core.examples.DuplicateWords$RemoveDuplicateOccurrence"/></lhs><lhs name\="com.rs.app.bean.MyBooks"><rhs name\="com.rs.app.bean.MyBooks"/></lhs><lhs name\="com.rs.app.responce.GetUserResponce"><rhs name\="com.rs.app.responce.GetUserResponce"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuffer"/><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuffer"/><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="com.p.strings.Strings1"><rhs name\="com.p.strings.Strings1"/></lhs><lhs name\="com.iv.infosys1.Strings2"><rhs name\="com.iv.infosys1.Strings2"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.LinkedHashMap"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="com.as.demo.entity.User"><rhs name\="com.as.demo.entity.User"/></lhs><lhs name\="com.as.demo.response.RegResponse"><rhs name\="com.as.demo.response.RegResponse"/></lhs><lhs name\="java.time.temporal.Temporal"><rhs name\="java.time.LocalDateTime"/></lhs><lhs name\="java.time.temporal.TemporalAccessor"><rhs name\="java.time.LocalDateTime"/></lhs><lhs name\="java.time.temporal.TemporalAdjuster"><rhs name\="java.time.LocalDateTime"/></lhs><lhs name\="java.time.chrono.ChronoLocalDateTime"><rhs name\="java.time.LocalDateTime"/></lhs><lhs name\="java.text.DateFormat"><rhs name\="java.text.SimpleDateFormat"/></lhs><lhs name\="java.text.Format"><rhs name\="java.text.SimpleDateFormat"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.text.SimpleDateFormat"/><rhs name\="java.util.Date"/><rhs name\="org.springframework.amqp.core.Queue"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.text.SimpleDateFormat"><rhs name\="java.text.SimpleDateFormat"/></lhs><lhs name\="java.util.Date"><rhs name\="java.util.Date"/></lhs><lhs name\="org.springframework.mail.MailMessage"><rhs name\="org.springframework.mail.SimpleMailMessage"/></lhs><lhs name\="org.springframework.mail.SimpleMailMessage"><rhs name\="org.springframework.mail.SimpleMailMessage"/></lhs><lhs name\="org.apache.commons.mail.MultiPartEmail"><rhs name\="org.apache.commons.mail.HtmlEmail"/></lhs><lhs name\="org.apache.commons.mail.Email"><rhs name\="org.apache.commons.mail.HtmlEmail"/></lhs><lhs name\="org.apache.commons.mail.HtmlEmail"><rhs name\="org.apache.commons.mail.HtmlEmail"/></lhs><lhs name\="com.as.demo.response.UpdateUserResponse"><rhs name\="com.as.demo.response.UpdateUserResponse"/></lhs><lhs name\="org.springframework.security.core.userdetails.UserDetails"><rhs name\="org.springframework.security.core.userdetails.User"/></lhs><lhs name\="org.springframework.security.core.userdetails.UserDetailsService"><rhs name\="org.springframework.security.provisioning.InMemoryUserDetailsManager"/></lhs><lhs name\="org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider"><rhs name\="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/></lhs><lhs name\="org.springframework.security.authentication.AuthenticationProvider"><rhs name\="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/></lhs><lhs name\="org.springframework.beans.factory.InitializingBean"><rhs name\="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.context.MessageSourceAware"><rhs name\="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/></lhs><lhs name\="org.springframework.beans.factory.Aware"><rhs name\="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.security.authentication.dao.DaoAuthenticationProvider"><rhs name\="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/></lhs><lhs name\="org.springframework.security.crypto.password.PasswordEncoder"><rhs name\="org.springframework.security.crypto.password.NoOpPasswordEncoder"/><rhs name\="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/></lhs><lhs name\="org.springframework.security.web.util.matcher.RequestMatcher"><rhs name\="org.springframework.security.web.util.matcher.AntPathRequestMatcher"/></lhs><lhs name\="org.springframework.amqp.core.AbstractDeclarable"><rhs name\="org.springframework.amqp.core.Queue"/><rhs name\="org.springframework.amqp.core.TopicExchange"/></lhs><lhs name\="org.springframework.amqp.core.Declarable"><rhs name\="org.springframework.amqp.core.Queue"/><rhs name\="org.springframework.amqp.core.TopicExchange"/></lhs><lhs name\="org.springframework.amqp.core.Queue"><rhs name\="org.springframework.amqp.core.Queue"/></lhs><lhs name\="org.springframework.amqp.core.AbstractExchange"><rhs name\="org.springframework.amqp.core.TopicExchange"/></lhs><lhs name\="org.springframework.amqp.core.Exchange"><rhs name\="org.springframework.amqp.core.TopicExchange"/></lhs><lhs name\="org.springframework.amqp.core.TopicExchange"><rhs name\="org.springframework.amqp.core.TopicExchange"/></lhs><lhs name\="org.springframework.amqp.support.converter.MessageConverter"><rhs name\="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/></lhs><lhs name\="org.springframework.beans.factory.BeanFactoryAware"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.core.RabbitOperations"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.core.AmqpTemplate"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.context.Lifecycle"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.api.ChannelAwareMessageListener"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.core.MessageListener"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.support.ListenerContainerAware"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.PublisherCallbackChannel$Listener"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.beans.factory.BeanNameAware"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.beans.factory.DisposableBean"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.RabbitAccessor"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="jcs.practice.entity.Been"><rhs name\="jcs.practice.entity.Been"/></lhs><lhs name\="jcs.practice.entity.User"><rhs name\="jcs.practice.entity.User"/></lhs><lhs name\="java.util.AbstractMap"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.HashMap"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.Iterator"><rhs name\="java.util.Scanner"/></lhs><lhs name\="java.io.Closeable"><rhs name\="java.util.Scanner"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="java.util.Scanner"/></lhs><lhs name\="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"><rhs name\="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/></lhs><lhs name\="org.springframework.web.client.RestOperations"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.http.client.support.InterceptingHttpAccessor"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.http.client.support.HttpAccessor"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.web.client.RestTemplate"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="com.fasterxml.jackson.core.Versioned"><rhs name\="com.fasterxml.jackson.databind.ObjectMapper"/></lhs><lhs name\="com.fasterxml.jackson.core.ObjectCodec"><rhs name\="com.fasterxml.jackson.databind.ObjectMapper"/></lhs><lhs name\="com.fasterxml.jackson.core.TreeCodec"><rhs name\="com.fasterxml.jackson.databind.ObjectMapper"/></lhs><lhs name\="com.fasterxml.jackson.databind.ObjectMapper"><rhs name\="com.fasterxml.jackson.databind.ObjectMapper"/></lhs><lhs name\="com.as.spring.entity.PracticeUser"><rhs name\="com.as.spring.entity.PracticeUser"/></lhs><lhs name\="java.util.concurrent.CountDownLatch"><rhs name\="java.util.concurrent.CountDownLatch"/></lhs><lhs name\="com.rs.book.response.SearchTeamResponse"><rhs name\="com.rs.book.response.SearchTeamResponse"/></lhs><lhs name\="com.rs.book.entity.TeamData"><rhs name\="com.rs.book.entity.TeamData"/></lhs><lhs name\="com.rs.book.response.SaveTeamResponse"><rhs name\="com.rs.book.response.SaveTeamResponse"/></lhs><lhs name\="com.rs.app.bean.EmailJSON"><rhs name\="com.rs.app.bean.EmailJSON"/></lhs><lhs name\="com.as.email.entity.EmailJSON"><rhs name\="com.as.email.entity.EmailJSON"/></lhs><lhs name\="com.mysql.cj.x.protobuf.MysqlxCrud$LimitOrBuilder"><rhs name\="com.mysql.cj.x.protobuf.MysqlxCrud$Limit"/></lhs><lhs name\="com.google.protobuf.MessageOrBuilder"><rhs name\="com.mysql.cj.x.protobuf.MysqlxCrud$Limit"/></lhs><lhs name\="com.google.protobuf.MessageLiteOrBuilder"><rhs name\="com.mysql.cj.x.protobuf.MysqlxCrud$Limit"/></lhs><lhs name\="com.google.protobuf.GeneratedMessageV3"><rhs name\="com.mysql.cj.x.protobuf.MysqlxCrud$Limit"/></lhs><lhs name\="com.google.protobuf.AbstractMessage"><rhs name\="com.mysql.cj.x.protobuf.MysqlxCrud$Limit"/></lhs><lhs name\="com.google.protobuf.Message"><rhs name\="com.mysql.cj.x.protobuf.MysqlxCrud$Limit"/></lhs><lhs name\="com.google.protobuf.MessageLite"><rhs name\="com.mysql.cj.x.protobuf.MysqlxCrud$Limit"/></lhs><lhs name\="com.google.protobuf.AbstractMessageLite"><rhs name\="com.mysql.cj.x.protobuf.MysqlxCrud$Limit"/></lhs><lhs name\="org.hibernate.query.spi.Limit"><rhs name\="org.hibernate.query.spi.Limit"/></lhs><lhs name\="java.lang.Enum"><rhs name\="org.springframework.http.HttpStatus"/><rhs name\="org.springframework.http.HttpMethod"/><rhs name\="javax.persistence.GenerationType"/></lhs><lhs name\="com.as.security.util.LoggerUtil"><rhs name\="com.as.security.util.LoggerUtil"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.LinkedHashSet"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.LinkedHashSet"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.LinkedHashSet"/></lhs><lhs name\="org.springframework.http.HttpEntity"><rhs name\="org.springframework.http.ResponseEntity"/></lhs><lhs name\="com.rs.app.bean.Product"><rhs name\="com.rs.app.bean.Product"/></lhs><lhs name\="com.rs.app.request.LoginRequest"><rhs name\="com.rs.app.request.LoginRequest"/></lhs><lhs name\="com.rs.app.bean.User"><rhs name\="com.rs.app.bean.User"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="com.rs.java.examples.CountOfEachCharacter"><rhs name\="com.rs.java.examples.CountOfEachCharacter"/></lhs></history>
content_assist_number_of_computers=25
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.formatterprofiles.version=18
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="aspectj" deleted\="false" description\="adviceexecution pointcut (AspectJ)" enabled\="true" name\="adviceexecution">adviceexecution()</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after returning advice (AspectJ)" enabled\="true" name\="after_returning">after(${args}) returning() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after throwing advice (AspectJ)" enabled\="true" name\="after_throwing">after(${args}) throwing() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="around advice (AspectJ)" enabled\="true" name\="around">around(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="before advice (AspectJ)" enabled\="true" name\="before">before(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call constructor pointcut (AspectJ)" enabled\="true" name\="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call method declaration (AspectJ)" enabled\="true" name\="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflow pointcut (AspectJ)" enabled\="true" name\="cflow">cflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflowbelow pointcut (AspectJ)" enabled\="true" name\="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare error (AspectJ)" enabled\="true" name\="dece">declare error \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_extends">declare parents \: ${type_pattern} extends ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_implements">declare parents \: ${type_pattern} implements ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare soft (AspectJ)" enabled\="true" name\="decs">declare soft \: ${exception_type} \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare warning (AspectJ)" enabled\="true" name\="decw">declare warning \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a constructor pointcut (AspectJ)" enabled\="true" name\="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a method pointcut (AspectJ)" enabled\="true" name\="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="get pointcut (AspectJ)" enabled\="true" name\="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="handler pointcut (AspectJ)" enabled\="true" name\="handler">handler(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="initialization pointcut (AspectJ)" enabled\="true" name\="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut declaration (AspectJ)" enabled\="true" name\="pc">pointcut ${name}() \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflow (AspectJ)" enabled\="true" name\="percflow">percflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflowbelow (AspectJ)" enabled\="true" name\="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertarget (AspectJ)" enabled\="true" name\="pertarget">pertarget(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="perthis (AspectJ)" enabled\="true" name\="perthis">perthis(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertypewithin (AspectJ)" enabled\="true" name\="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut (AspectJ)" enabled\="true" name\="pointcut">pointcut ${name}(${args}) \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="preinitialization pointcut (AspectJ)" enabled\="true" name\="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="set pointcut (AspectJ)" enabled\="true" name\="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="staticinitialization pointcut (AspectJ)" enabled\="true" name\="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPoint (AspectJ)" enabled\="true" name\="thisJoinPoint">thisJoinPoint</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPointStaticPart (AspectJ)" enabled\="true" name\="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="within pointcut (AspectJ)" enabled\="true" name\="within">within(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a constructor pointcut (AspectJ)" enabled\="true" name\="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a method pointcut (AspectJ)" enabled\="true" name\="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template></templates>
spelling_locale_initialized=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
